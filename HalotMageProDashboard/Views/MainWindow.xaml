<metro:MetroWindow x:Class="HalotMageProDashboard.Views.MainWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
                   xmlns:vm="clr-namespace:HalotMageProDashboard.ViewModels"
                   WindowStyle="SingleBorderWindow"
                     IsRestoringWindowPlacement="True"
                     d:DataContext="{d:DesignInstance {x:Type vm:MainWindowViewModel}}"
        mc:Ignorable="d"
        Title="Halot Mage Pro Dashboard" Height="450" Width="800">
    <i:Interaction.Triggers>
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction />
            <l:WindowInteractionMessageAction />
        </l:InteractionMessageTrigger>
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialized" MethodTarget="{Binding}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Text="Halot Mage Pro Dashboard" FontSize="18" VerticalAlignment="Center" Margin="3,0,0,0" />
            <metro:SystemButtons Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Right" />
        </Grid>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal">
                <Button Content="新しいプリンターを追加" Margin="5">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:LivetCallMethodAction MethodName="OpenAddNewPrinterDialog" MethodTarget="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
            <DataGrid Grid.Row="1" DataContext="{Binding GridViewModel}" ItemsSource="{Binding Printers, Mode=TwoWay}" AutoGenerateColumns="False"
                      CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False" CanUserReorderColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="名前" Binding="{Binding Name}" />
                    <DataGridTextColumn Header="接続" Binding="{Binding IsConnected, Converter={StaticResource ConnectionBooleanConverter}}" IsReadOnly="True" />
                    <DataGridTextColumn Header="IPアドレス" Binding="{Binding Host}" IsReadOnly="True" />
                    <DataGridTextColumn Header="ファイル名" Binding="{Binding Filename}" Width="200" IsReadOnly="True" />
                    <DataGridTemplateColumn Header="進捗" Width="150" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <ItemContainerTemplate>
                                <Grid>
                                    <ProgressBar Minimum="0" Maximum="1" Height="12" Value="{Binding Progress}" />
                                    <TextBlock HorizontalAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding CurrentSliceLayer}" Value="0" />
                                                            <Condition Binding="{Binding TotalLayerCount}" Value="0" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                        <Run Text="{Binding CurrentSliceLayer}" />
                                        /
                                        <Run Text="{Binding TotalLayerCount}" />
                                    </TextBlock>
                                </Grid>
                            </ItemContainerTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="残り時間" Binding="{Binding RemainingTime}" Width="100" IsReadOnly="True" />
                    <DataGridTextColumn Header="ステータス" Binding="{Binding Status}" IsReadOnly="True" />
                    <DataGridTemplateColumn Header="アクション" Width="*" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <ItemContainerTemplate>
                                <WrapPanel Orientation="Horizontal" Background="Transparent" Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext}">
                                    <WrapPanel.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="プリンターを削除">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <l:LivetCallMethodAction MethodTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.Tag}"
                                                                                 MethodName="RemovePrinter" MethodParameter="{Binding}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </MenuItem>
                                        </ContextMenu>
                                    </WrapPanel.ContextMenu>
                                    <Button Content="一時停止/再開" Margin="5,0,0,0">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPrinting}" Value="True" />
                                                            <Condition Binding="{Binding IsCompleted}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="PauseResume" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <Button Content="停止" Margin="10,0,0,0">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPrinting}" Value="True" />
                                                            <Condition Binding="{Binding IsCompleted}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Stop" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <Button Content="ファイルを選択" Margin="10,0,0,0">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPrinting}" Value="False" />
                                                            <Condition Binding="{Binding IsCompleted}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="SendFile" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <Button Content="パスワード設定" Margin="10,0,0,0">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Status}" Value="パスワードエラー">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <l:LivetCallMethodAction MethodTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                    AncestorType={x:Type DataGrid}}, Path=DataContext}" MethodName="SetPassword" MethodParameter="{Binding}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                </WrapPanel>
                            </ItemContainerTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

    </Grid>
</metro:MetroWindow>
